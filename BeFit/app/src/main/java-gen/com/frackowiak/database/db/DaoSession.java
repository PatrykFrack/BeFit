package com.frackowiak.database.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.frackowiak.database.dao.Team;
import com.frackowiak.database.dao.Player;
import com.frackowiak.database.dao.Achievement;
import com.frackowiak.database.dao.Configuration;
import com.frackowiak.database.dao.Day;
import com.frackowiak.database.dao.WorkDay;
import com.frackowiak.database.dao.Beacon;
import com.frackowiak.database.dao.Errand;
import com.frackowiak.database.dao.DoneErrand;

import com.frackowiak.database.db.TeamDao;
import com.frackowiak.database.db.PlayerDao;
import com.frackowiak.database.db.AchievementDao;
import com.frackowiak.database.db.ConfigurationDao;
import com.frackowiak.database.db.DayDao;
import com.frackowiak.database.db.WorkDayDao;
import com.frackowiak.database.db.BeaconDao;
import com.frackowiak.database.db.ErrandDao;
import com.frackowiak.database.db.DoneErrandDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig teamDaoConfig;
    private final DaoConfig playerDaoConfig;
    private final DaoConfig achievementDaoConfig;
    private final DaoConfig configurationDaoConfig;
    private final DaoConfig dayDaoConfig;
    private final DaoConfig workDayDaoConfig;
    private final DaoConfig beaconDaoConfig;
    private final DaoConfig errandDaoConfig;
    private final DaoConfig doneErrandDaoConfig;

    private final TeamDao teamDao;
    private final PlayerDao playerDao;
    private final AchievementDao achievementDao;
    private final ConfigurationDao configurationDao;
    private final DayDao dayDao;
    private final WorkDayDao workDayDao;
    private final BeaconDao beaconDao;
    private final ErrandDao errandDao;
    private final DoneErrandDao doneErrandDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        teamDaoConfig = daoConfigMap.get(TeamDao.class).clone();
        teamDaoConfig.initIdentityScope(type);

        playerDaoConfig = daoConfigMap.get(PlayerDao.class).clone();
        playerDaoConfig.initIdentityScope(type);

        achievementDaoConfig = daoConfigMap.get(AchievementDao.class).clone();
        achievementDaoConfig.initIdentityScope(type);

        configurationDaoConfig = daoConfigMap.get(ConfigurationDao.class).clone();
        configurationDaoConfig.initIdentityScope(type);

        dayDaoConfig = daoConfigMap.get(DayDao.class).clone();
        dayDaoConfig.initIdentityScope(type);

        workDayDaoConfig = daoConfigMap.get(WorkDayDao.class).clone();
        workDayDaoConfig.initIdentityScope(type);

        beaconDaoConfig = daoConfigMap.get(BeaconDao.class).clone();
        beaconDaoConfig.initIdentityScope(type);

        errandDaoConfig = daoConfigMap.get(ErrandDao.class).clone();
        errandDaoConfig.initIdentityScope(type);

        doneErrandDaoConfig = daoConfigMap.get(DoneErrandDao.class).clone();
        doneErrandDaoConfig.initIdentityScope(type);

        teamDao = new TeamDao(teamDaoConfig, this);
        playerDao = new PlayerDao(playerDaoConfig, this);
        achievementDao = new AchievementDao(achievementDaoConfig, this);
        configurationDao = new ConfigurationDao(configurationDaoConfig, this);
        dayDao = new DayDao(dayDaoConfig, this);
        workDayDao = new WorkDayDao(workDayDaoConfig, this);
        beaconDao = new BeaconDao(beaconDaoConfig, this);
        errandDao = new ErrandDao(errandDaoConfig, this);
        doneErrandDao = new DoneErrandDao(doneErrandDaoConfig, this);

        registerDao(Team.class, teamDao);
        registerDao(Player.class, playerDao);
        registerDao(Achievement.class, achievementDao);
        registerDao(Configuration.class, configurationDao);
        registerDao(Day.class, dayDao);
        registerDao(WorkDay.class, workDayDao);
        registerDao(Beacon.class, beaconDao);
        registerDao(Errand.class, errandDao);
        registerDao(DoneErrand.class, doneErrandDao);
    }
    
    public void clear() {
        teamDaoConfig.getIdentityScope().clear();
        playerDaoConfig.getIdentityScope().clear();
        achievementDaoConfig.getIdentityScope().clear();
        configurationDaoConfig.getIdentityScope().clear();
        dayDaoConfig.getIdentityScope().clear();
        workDayDaoConfig.getIdentityScope().clear();
        beaconDaoConfig.getIdentityScope().clear();
        errandDaoConfig.getIdentityScope().clear();
        doneErrandDaoConfig.getIdentityScope().clear();
    }

    public TeamDao getTeamDao() {
        return teamDao;
    }

    public PlayerDao getPlayerDao() {
        return playerDao;
    }

    public AchievementDao getAchievementDao() {
        return achievementDao;
    }

    public ConfigurationDao getConfigurationDao() {
        return configurationDao;
    }

    public DayDao getDayDao() {
        return dayDao;
    }

    public WorkDayDao getWorkDayDao() {
        return workDayDao;
    }

    public BeaconDao getBeaconDao() {
        return beaconDao;
    }

    public ErrandDao getErrandDao() {
        return errandDao;
    }

    public DoneErrandDao getDoneErrandDao() {
        return doneErrandDao;
    }

}
